<UserControl x:Class="TourPlanner.Views.MenuBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <!-- The Menu isn't styled correctly for the dark theme in WPF-UI (and there is no ui:Menu), so we define a custom style here -->
    <!-- We override the standard brushes of the WPF control with the ones from WPF-UI; DynamicResource ensures that the resource can be changed at runtime -->
    <UserControl.Resources>
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{DynamicResource ApplicationBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <Menu Grid.Column="0" FontSize="14">
            <!-- File Menu -->
            <ui:MenuItem Header="Import" Command="{Binding ExecuteImportTours}" Icon="{ui:SymbolIcon FolderOpen24}"/>
            <!-- Edit Menu -->
            <ui:MenuItem Header="Export" Command="{Binding ExecuteExportTours}" Icon="{ui:SymbolIcon Save24}"/>
        </Menu>
        
        <ui:ToggleSwitch Grid.Column="1"
                         x:Name="ThemeToggleSwitch"
                         OffContent="Light"
                         OnContent="Dark" 
                         HorizontalAlignment="Right"
                         VerticalAlignment="Center"  
                         Margin="0,0,10,0"
                         IsChecked="{Binding ThemeToggleChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Command="{Binding ExecuteChangeTheme}">
        </ui:ToggleSwitch>
    </Grid>
</UserControl>
